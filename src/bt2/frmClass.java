/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/
package bt2;

import dao.ClassDAO;
import static dao.ClassDAO.getClasses;
import dao.StudentDAO;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Iterator;
import java.util.List;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import pojo.Student;
import pojo.Class;

/**
 *
 * @author vomin
 */
public class frmClass extends javax.swing.JFrame {
    List<Student> students = null;
    List<Class> classes = null;
    /**
     * Creates new form frmClass
     */
    public frmClass() {
        students = StudentDAO.getStudents();
        classes = getClasses();
        initComponents();
        // danh sach lop hoc
        
        for (int i = 0; i < classes.size(); i++)
        {
            cboClass.addItem(classes.get(i).getName());
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnImport = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStudents = new javax.swing.JTable();
        cboClass = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        btnImport.setText("Nhập danh sách lớp");
        btnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportActionPerformed(evt);
            }
        });

        tblStudents.setModel(tblStudents.getModel());
        jScrollPane1.setViewportView(tblStudents);

        cboClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboClassActionPerformed(evt);
            }
        });
        cboClass.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cboClassPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 680, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnImport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cboClass, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnImport)
                .addGap(18, 18, 18)
                .addComponent(cboClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void btnImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportActionPerformed
        // TODO add your handling code here:
        boolean existed = false;
        FileInputStream f = null;
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        
        File selectedFile = null;
        Scanner input = null;
        
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            selectedFile = fileChooser.getSelectedFile();
            System.out.println("Selected file: " + selectedFile.getAbsolutePath());
        }
        
        try {
            f = new FileInputStream(selectedFile.getAbsolutePath()); //tao bien tep f
            input = new Scanner(f,"UTF-8");
            
            while(input.hasNextLine()) //trong khi chưa het file
            {
                String line = input.nextLine(); //doc 1 dong
                if(line.trim()!="") //neu dong khong phai rong
                {
                    
                    String item[] = line.split(","); //cat cac thong tin cua line bang dau phay
                    
                    String classCode = item[0];
                    
                    Student tmpSd = new Student();
                    
                    tmpSd.setCode(item[1]);
                    tmpSd.setName(item[2]);
                    tmpSd.setGender(item[3]);
                    tmpSd.setPid(item[4]);
                    tmpSd.setClassCode(item[0]);
                    
                    for (Iterator<Student> iterator = students.iterator(); iterator.hasNext();) {
                        Student next = iterator.next();
                        if (next.getCode().compareTo(tmpSd.getCode()) == 0)
                        {
                            existed = true;
                            break;
                        }
                    }
                    
                    if (!existed)
                    {
                        Class cls = new Class(tmpSd.getClassCode(), tmpSd.getClassCode());
                        if (!classes.contains(cls))
                        {
                            classes.add(cls);
                            ClassDAO.AddClass(cls);
                        }
                        
                        if (StudentDAO.AddStudent(tmpSd))
                        {
                            students.add(tmpSd);
                        }
                        else
                        {
                            break;
                        }
                    }
                    else
                    {
                        break;
                    }
                }
            }
            if (existed)
                JOptionPane.showMessageDialog(null, "Import thành công.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            else
                JOptionPane.showMessageDialog(null, "Import thất bại.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        }
        catch (FileNotFoundException ex) {
            Logger.getLogger(frmClass.class.getName()).log(Level.SEVERE, null, ex);
        }        finally {
            if (existed)
            {
                System.out.println("Tồn tại dữ liệu.");
            }
            if (f != null)
                try {
                    f.close();
            } catch (IOException ex) {
                Logger.getLogger(frmClass.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (input != null)
                input.close();
        }
    }//GEN-LAST:event_btnImportActionPerformed
    
    private void cboClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboClassActionPerformed
        // TODO add your handling code here:
        String tenmh = cboClass.getSelectedItem().toString();
        
        String [] ColumNames = {"STT", "MSSV", "Họ và tên", "Giới tính", "CMND"};
        DefaultTableModel modeltable = new DefaultTableModel(null, ColumNames);
        
        List<Student> tempStudents = StudentDAO.getStudentsByClass(tenmh);
        int row = 0;
        for(int i = 0; i < tempStudents.size(); i++)
        {
            Student a = (Student)tempStudents.get(i);
            
            
            modeltable.insertRow(i, new Object[]{i + 1, a.getCode(), a.getCode(), a.getName(), a.getGender(), a.getPid()});
            
        }
        
        tblStudents.removeAll();
        
        tblStudents.setModel(modeltable);
        //jTableDSSV.setRowHeight(30);
        tblStudents.getColumnModel().getColumn(0).setPreferredWidth(150);
        tblStudents.getColumnModel().getColumn(1).setPreferredWidth(300);
    }//GEN-LAST:event_cboClassActionPerformed
    
    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_formWindowClosed
    
    private void cboClassPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cboClassPropertyChange
        // TODO add your handling code here:
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cboClassPropertyChange
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
        * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
        */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmClass().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnImport;
    private javax.swing.JComboBox cboClass;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblStudents;
    // End of variables declaration//GEN-END:variables
}
