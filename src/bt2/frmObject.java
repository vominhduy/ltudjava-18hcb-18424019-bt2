/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bt2;

import dao.ClassDAO;
import dao.ClassObjectStudentDAO;
import dao.ObjectDAO;
import dao.StudentDAO;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import pojo.ClassObjectStudent;
import pojo.Object;
import pojo.Student;
import pojo.Class;

/**
 *
 * @author vomin
 */
public class frmObject extends javax.swing.JDialog {
    List<pojo.ClassObjectStudent> classObjectStudents = null;
    List<pojo.Class> classes = null;
    /**
     * Creates new form frmSchedule
     */
    public frmObject(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        classes = ClassDAO.getClasses();
        initComponents();
        for (int i = 0; i < classes.size(); i++)
        {
            cboClass.addItem(classes.get(i).getCode());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnImport = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblObject = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        cboClass = new javax.swing.JComboBox();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnImport.setText("Nhập thời khóa biểu");
        btnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportActionPerformed(evt);
            }
        });

        btnAdd.setText("Thêm sinh viên vào môn học");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        tblObject.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblObject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblObjectMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tblObjectMouseEntered(evt);
            }
        });
        jScrollPane2.setViewportView(tblObject);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("QUẢN LÝ MÔN HỌC");

        cboClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboClassActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnImport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(236, 236, 236)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cboClass, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addComponent(btnImport)
                .addGap(18, 18, 18)
                .addComponent(btnAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(cboClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cboClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboClassActionPerformed
        // TODO add your handling code here:
        String className = cboClass.getSelectedItem().toString();
        classObjectStudents = ClassObjectStudentDAO.getObjectByClass(className);
        
        ArrayList<String> tmpClsObjStu = new ArrayList<>();
        
        
        
        String [] ColumNames = {"STT", "Mã lớp", "Mã môn", "Tên môn", "Phòng học"};
        DefaultTableModel modeltable = new DefaultTableModel(null, ColumNames);
        
        int row = 0;
        for(int i = 0; i < classObjectStudents.size(); i++)
        {
            ClassObjectStudent a = (ClassObjectStudent)classObjectStudents.get(i);
            boolean objectExists = false;
            for (int j = 0; j < tmpClsObjStu.size(); j++) {
                if (tmpClsObjStu.get(j).compareTo(a.getObjectCode()) == 0)
                {    
                    objectExists = true;
                    break;
                }
            }
            
            if (objectExists)
                continue;
            
            Object tmpObj = ObjectDAO.getObject(a.getObjectCode());
            if (tmpObj != null)
            {
                tmpClsObjStu.add(tmpObj.getCode());
                modeltable.insertRow(row, new java.lang.Object[]{row + 1, a.getClassCode(), a.getObjectCode(), tmpObj.getName(), tmpObj.getRoom()});
                row++;
            }
        }

        tblObject.removeAll();

        tblObject.setModel(modeltable);
    }//GEN-LAST:event_cboClassActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        frmObjectStudent frm = new frmObjectStudent(null, true);
        frm.setTitle("18424019  -  Thêm sinh viên vào môn học");
        frm.show();
        frm.dispose();
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportActionPerformed
        // TODO add your handling code here:
        
        // TODO add your handling code here:
        boolean existed = false;
        FileInputStream f = null;
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));

        File selectedFile = null;
        Scanner input = null;

        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            selectedFile = fileChooser.getSelectedFile();
            System.out.println("Selected file: " + selectedFile.getAbsolutePath());
        }

        try {
            f = new FileInputStream(selectedFile.getAbsolutePath()); //tao bien tep f
            input = new Scanner(f,"UTF-8");

            while(input.hasNextLine()) //trong khi chưa het file
            {
                String line = input.nextLine(); //doc 1 dong
                if(line.trim()!="") //neu dong khong phai rong
                {

                    String item[] = line.split(","); //cat cac thong tin cua line bang dau phay

                    String classCode = item[0];

                    Object tmpSd = new Object();
                    ClassObjectStudent tnpCls = new ClassObjectStudent();
                    
                    

                    tmpSd.setCode(item[1]);
                    tmpSd.setName(item[2]);
                    tmpSd.setRoom(item[3]);
                    
                    tnpCls.setClassCode(item[0]);
                    tnpCls.setObjectCode(item[1]);
                    
                    if (ClassDAO.getClass(tnpCls.getClassCode()) == null)
                    {
                        JOptionPane.showMessageDialog(null, "Không tồn tại mã lớp học.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    }
                    else
                    {
                        List<Student> students = StudentDAO.getStudentsByClass(tnpCls.getClassCode());
                        
                        for (int i = 0; i < students.size(); i++) {
                            tnpCls.setStudentCode(students.get(i).getCode());
                            if (!ClassObjectStudentDAO.AddObject(tnpCls))
                            {
                                // false
                                existed = true;
                            }
                        }
                        if (!ObjectDAO.AddObject(tmpSd))
                        {
                            //false
                            existed = true;
                        }
                    }
                }
            }
            if (existed)
                JOptionPane.showMessageDialog(null, "Import thành công.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            else
                JOptionPane.showMessageDialog(null, "Import thất bại.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        }
        catch (FileNotFoundException ex) {
            Logger.getLogger(frmClass.class.getName()).log(Level.SEVERE, null, ex);
        }        finally {
            if (existed)
            {
                System.out.println("Tồn tại dữ liệu.");
            }
            if (f != null)
            try {
                f.close();
            } catch (IOException ex) {
                Logger.getLogger(frmClass.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (input != null)
            input.close();
        }
    }//GEN-LAST:event_btnImportActionPerformed

    private void tblObjectMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblObjectMouseEntered
        // TODO add your handling code here:
        
    }//GEN-LAST:event_tblObjectMouseEntered

    private void tblObjectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblObjectMouseClicked
        // TODO add your handling code here:
        frmClassObject frm = new frmClassObject(null, true);
        

        int row = tblObject.getSelectedRow();
        int column = 2;
        String valueInCell = (String)tblObject.getValueAt(row, column);
        String valueInCellName = (String)tblObject.getValueAt(row, 3);
        
        
        frm.setDataCode(cboClass.getSelectedItem().toString(), valueInCell, valueInCellName);
        
        frm.show();
        frm.dispose();
    }//GEN-LAST:event_tblObjectMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmObject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmObject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmObject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmObject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                frmObject dialog = new frmObject(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnImport;
    private javax.swing.JComboBox cboClass;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tblObject;
    // End of variables declaration//GEN-END:variables
}
